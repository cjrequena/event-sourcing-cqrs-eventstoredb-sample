server.servlet.context-path: / # Context path of the application.
server.port: ${SERVER_PORT:9080} # Server HTTP port.
spring.application.name: '@project.artifactId@'
spring.application.version: '@project.version@'
spring.profiles.active: ${SPRING_PROFILES_ACTIVE:local}
spring.main.allow-bean-definition-overriding: true # Enable bean override

# ----------------------------------------
# ACTUATOR PROPERTIES
# ----------------------------------------
# ENDPOINTS WEB CONFIGURATION
management.endpoints.web.exposure.include: '*' # Endpoint IDs that should be included or '*' for all.
management.endpoints.web.exposure.exclude:  # Endpoint IDs that should be excluded or '*' for all.
management.endpoints.web.base-path: /management # Base path for Web endpoints. Relative to server.servlet.context-path or management.server.servlet.context-path if management.server.port is configured.
management.endpoints.web.path-mapping.health: healthcheck
# HEALTH ENDPOINT
management.endpoint.health.cache.time-to-live: 0ms # Maximum time that a response can be cached.
management.endpoint.health.enabled: true # Whether to enable the health endpoint.
management.endpoint.health.roles:  # Roles used to determine whether or not a user is authorized to be shown details. When empty, all authenticated users are authorized.
management.endpoint.health.show-details: always # When to show full health details.
management.health.circuitbreakers.enabled: true
management.health.ratelimiters.enabled: true
# INFO CONTRIBUTORS (InfoContributorProperties)
management.info.build.enabled: true # Whether to enable build info.
management.info.defaults.enabled: true # Whether to enable default info contributors.
management.info.env.enabled: true # Whether to enable environment info.
management.info.git.enabled: true # Whether to enable git info.
management.info.git.mode: full # Mode to use to expose git information.

---
spring.config.activate.on-profile: local

# Postgres
spring.datasource.postgres.type: com.zaxxer.hikari.HikariDataSource
spring.datasource.postgres.jdbcUrl: jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/postgres
spring.datasource.postgres.driver-class-name: org.postgresql.Driver
spring.datasource.postgres.username: postgres
spring.datasource.postgres.password: postgres

# https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby
spring.datasource.postgres.pool-name: HikariPool
spring.datasource.postgres.connection-timeout: 20000
spring.datasource.postgres.minimum-idle: 5
spring.datasource.postgres.maximum-pool-size: 12
spring.datasource.postgres.idle-timeout: 300000
spring.datasource.postgres.max-lifetime: 1200000
spring.datasource.postgres.auto-commit: false

# JPA specific configs
spring.jpa.open-in-view: false
#spring.jpa.properties.hibernate.connection.provider_class: org.hibernate.hikaricp.internal.HikariCPConnectionProvider
spring.jpa.database-platform: org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.properties.hibernate.show_sql: false
spring.jpa.properties.hibernate.format_sql: true
spring.jpa.properties.hibernate.use_sql: true
spring.jpa.properties.hibernate.hibernate.dialect: true
spring.jpa.properties.hibernate.id.new_generator_mappings: false
spring.jpa.properties.hibernate.search.autoregister_listeners: false
spring.jpa.properties.hibernate.bytecode.use_reflection_optimizer: false

# SWAGGER
springdoc:
  api-docs:
    groups:
      enabled: true
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true
    groups-order: DESC
  version: '@springdoc.version@'
